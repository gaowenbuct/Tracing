buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/"}
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'

group = 'omd'
jar {
    baseName = 'zipkin-server'
    version =  '0.0.1'
}

sourceCompatibility = 1.8

docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/"}
    mavenCentral()
    jcenter()
}

ext {
    springCloudVersion = 'Edgware.RELEASE'
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('io.zipkin.java:zipkin-server')
    compile('io.zipkin.java:zipkin-autoconfigure-ui')
    //compile('io.zipkin.java:zipkin')
    //compile('io.zipkin.java:zipkin-autoconfigure-storage-elasticsearch-http:2.3.1')
    //compile('org.springframework.cloud:spring-cloud-sleuth-zipkin-stream')
    //compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
    //compile('mysql:mysql-connector-java')
    //compile('org.springframework.boot:spring-boot-starter-jdbc')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}